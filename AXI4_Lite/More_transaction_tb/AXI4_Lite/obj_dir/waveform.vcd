$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 V ACLK $end
  $var wire 1 W ARESETN $end
  $var wire 1 X read_s $end
  $var wire 1 Y write_s $end
  $var wire 32 Z address [31:0] $end
  $var wire 32 [ W_data [31:0] $end
  $var wire 32 \ R_data [31:0] $end
  $scope module axi4_lite_top $end
   $var wire 32 ` DATA_WIDTH [31:0] $end
   $var wire 32 ` ADDRESS [31:0] $end
   $var wire 1 V ACLK $end
   $var wire 1 W ARESETN $end
   $var wire 1 X read_s $end
   $var wire 1 Y write_s $end
   $var wire 32 Z address [31:0] $end
   $var wire 32 [ W_data [31:0] $end
   $var wire 32 \ R_data [31:0] $end
   $var wire 1 # M_ARREADY $end
   $var wire 1 $ S_RVALID $end
   $var wire 1 % M_ARVALID $end
   $var wire 1 & M_RREADY $end
   $var wire 1 ' S_AWREADY $end
   $var wire 1 ( S_BVALID $end
   $var wire 1 ) M_AWVALID $end
   $var wire 1 * M_BREADY $end
   $var wire 1 ) M_WVALID $end
   $var wire 1 ' S_WREADY $end
   $var wire 32 ] M_ARADDR [31:0] $end
   $var wire 32 ^ M_AWADDR [31:0] $end
   $var wire 32 _ M_WDATA [31:0] $end
   $var wire 32 \ S_RDATA [31:0] $end
   $var wire 4 + M_WSTRB [3:0] $end
   $var wire 2 a S_RRESP [1:0] $end
   $var wire 2 a S_BRESP [1:0] $end
   $scope module u_axi4_lite_master0 $end
    $var wire 32 ` ADDRESS [31:0] $end
    $var wire 32 ` DATA_WIDTH [31:0] $end
    $var wire 1 V ACLK $end
    $var wire 1 W ARESETN $end
    $var wire 1 X START_READ $end
    $var wire 1 Y START_WRITE $end
    $var wire 32 Z address [31:0] $end
    $var wire 32 [ W_data [31:0] $end
    $var wire 1 # M_ARREADY $end
    $var wire 32 \ M_RDATA [31:0] $end
    $var wire 2 a M_RRESP [1:0] $end
    $var wire 1 $ M_RVALID $end
    $var wire 1 ' M_AWREADY $end
    $var wire 1 ' M_WREADY $end
    $var wire 2 a M_BRESP [1:0] $end
    $var wire 1 ( M_BVALID $end
    $var wire 32 ] M_ARADDR [31:0] $end
    $var wire 1 % M_ARVALID $end
    $var wire 1 & M_RREADY $end
    $var wire 32 ^ M_AWADDR [31:0] $end
    $var wire 1 ) M_AWVALID $end
    $var wire 32 _ M_WDATA [31:0] $end
    $var wire 4 + M_WSTRB [3:0] $end
    $var wire 1 ) M_WVALID $end
    $var wire 1 * M_BREADY $end
    $var wire 1 , read_start $end
    $var wire 1 - write_start $end
    $var wire 3 . state [2:0] $end
    $var wire 3 / next_state [2:0] $end
   $upscope $end
   $scope module u_axi4_lite_slave0 $end
    $var wire 32 ` ADDRESS [31:0] $end
    $var wire 32 ` DATA_WIDTH [31:0] $end
    $var wire 1 V ACLK $end
    $var wire 1 W ARESETN $end
    $var wire 32 ] S_ARADDR [31:0] $end
    $var wire 1 % S_ARVALID $end
    $var wire 1 & S_RREADY $end
    $var wire 32 ^ S_AWADDR [31:0] $end
    $var wire 1 ) S_AWVALID $end
    $var wire 4 + S_WSTRB [3:0] $end
    $var wire 32 _ S_WDATA [31:0] $end
    $var wire 1 ) S_WVALID $end
    $var wire 1 * S_BREADY $end
    $var wire 1 # S_ARREADY $end
    $var wire 32 \ S_RDATA [31:0] $end
    $var wire 2 a S_RRESP [1:0] $end
    $var wire 1 $ S_RVALID $end
    $var wire 1 ' S_AWREADY $end
    $var wire 1 ' S_WREADY $end
    $var wire 2 a S_BRESP [1:0] $end
    $var wire 1 ( S_BVALID $end
    $var wire 32 ` no_of_registers [31:0] $end
    $var wire 32 0 register[0] [31:0] $end
    $var wire 32 1 register[1] [31:0] $end
    $var wire 32 2 register[2] [31:0] $end
    $var wire 32 3 register[3] [31:0] $end
    $var wire 32 4 register[4] [31:0] $end
    $var wire 32 5 register[5] [31:0] $end
    $var wire 32 6 register[6] [31:0] $end
    $var wire 32 7 register[7] [31:0] $end
    $var wire 32 8 register[8] [31:0] $end
    $var wire 32 9 register[9] [31:0] $end
    $var wire 32 : register[10] [31:0] $end
    $var wire 32 ; register[11] [31:0] $end
    $var wire 32 < register[12] [31:0] $end
    $var wire 32 = register[13] [31:0] $end
    $var wire 32 > register[14] [31:0] $end
    $var wire 32 ? register[15] [31:0] $end
    $var wire 32 @ register[16] [31:0] $end
    $var wire 32 A register[17] [31:0] $end
    $var wire 32 B register[18] [31:0] $end
    $var wire 32 C register[19] [31:0] $end
    $var wire 32 D register[20] [31:0] $end
    $var wire 32 E register[21] [31:0] $end
    $var wire 32 F register[22] [31:0] $end
    $var wire 32 G register[23] [31:0] $end
    $var wire 32 H register[24] [31:0] $end
    $var wire 32 I register[25] [31:0] $end
    $var wire 32 J register[26] [31:0] $end
    $var wire 32 K register[27] [31:0] $end
    $var wire 32 L register[28] [31:0] $end
    $var wire 32 M register[29] [31:0] $end
    $var wire 32 N register[30] [31:0] $end
    $var wire 32 O register[31] [31:0] $end
    $var wire 32 P addr [31:0] $end
    $var wire 1 Q write_addr $end
    $var wire 1 R write_data $end
    $var wire 3 S state [2:0] $end
    $var wire 3 T next_state [2:0] $end
    $var wire 32 U i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
0&
0'
0(
0)
0*
b0000 +
0,
0-
b000 .
b000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
0Q
0R
b000 S
b000 T
b00000000000000000000000000000000 U
1V
0W
0X
0Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000100000 `
b00 a
#1
0V
#2
b00000000000000000000000000100000 U
1V
#3
0V
#4
1V
#5
0V
#6
1V
#7
0V
#8
1V
#9
0V
#10
1V
1W
#11
0V
#12
1V
#13
0V
#14
1V
#15
0V
#16
1V
#17
0V
#18
1V
#19
0V
#20
1-
b001 /
1V
1Y
b00000000000000000000000000010000 Z
b11011110101011011011111011101111 [
#21
0V
#22
1)
1*
b1111 +
b001 .
b001 T
1V
b00000000000000000000000000010000 ^
b11011110101011011011111011101111 _
#23
0V
#24
1'
b010 /
1Q
1R
b001 S
b010 T
1V
#25
0V
#26
0'
1(
0)
b0000 +
b010 .
b000 /
b11011110101011011011111011101111 @
0Q
0R
b010 S
b000 T
1V
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
#27
0V
#28
0(
0*
b000 .
b001 /
b000 S
1V
#29
0V
#30
1)
1*
b1111 +
0-
b001 .
b001 T
1V
0Y
b00000000000000000000000000010000 ^
b11011110101011011011111011101111 _
#31
0V
#32
1'
b010 /
1Q
1R
b001 S
b010 T
1V
#33
0V
#34
0'
1(
0)
b0000 +
b010 .
b000 /
0Q
0R
b010 S
b000 T
1V
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
#35
0V
#36
0(
0*
b000 .
b000 S
1V
#37
0V
#38
1V
#39
0V
#40
1-
b001 /
1V
1Y
b00000000000000000000000000100000 Z
b11001010111111101011101010111110 [
#41
0V
#42
1)
1*
b1111 +
b001 .
b001 T
1V
b00000000000000000000000000100000 ^
b11001010111111101011101010111110 _
#43
0V
#44
1'
b010 /
1Q
1R
b001 S
b010 T
1V
#45
0V
#46
0'
1(
0)
b0000 +
b010 .
b000 /
b11001010111111101011101010111110 0
0Q
0R
b010 S
b000 T
1V
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
#47
0V
#48
0(
0*
b000 .
b001 /
b000 S
1V
#49
0V
#50
1)
1*
b1111 +
0-
b001 .
b001 T
1V
0Y
b00000000000000000000000000100000 ^
b11001010111111101011101010111110 _
#51
0V
#52
1'
b010 /
1Q
1R
b001 S
b010 T
1V
#53
0V
#54
0'
1(
0)
b0000 +
b010 .
b000 /
0Q
0R
b010 S
b000 T
1V
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
#55
0V
#56
0(
0*
b000 .
b000 S
1V
#57
0V
#58
1V
#59
0V
#60
1,
b011 /
1V
1X
b00000000000000000000000000010000 Z
#61
0V
#62
1%
1&
b011 .
b011 T
1V
b00000000000000000000000000010000 ]
#63
0V
#64
1#
b100 /
b011 S
b100 T
1V
#65
0V
#66
0#
1$
0%
b100 .
b000 /
b00000000000000000000000000010000 P
b100 S
b000 T
1V
b11011110101011011011111011101111 \
b00000000000000000000000000000000 ]
#67
0V
#68
0$
0&
b000 .
b011 /
b000 S
1V
b00000000000000000000000000000000 \
#69
0V
#70
1%
1&
0,
b011 .
b011 T
1V
0X
b00000000000000000000000000010000 ]
#71
0V
#72
1#
b100 /
b011 S
b100 T
1V
#73
0V
#74
0#
1$
0%
b100 .
b000 /
b100 S
b000 T
1V
b11011110101011011011111011101111 \
b00000000000000000000000000000000 ]
#75
0V
#76
0$
0&
b000 .
b000 S
1V
b00000000000000000000000000000000 \
#77
0V
#78
1V
#79
0V
#80
1,
b011 /
1V
1X
b00000000000000000000000000100000 Z
#81
0V
#82
1%
1&
b011 .
b011 T
1V
b00000000000000000000000000100000 ]
#83
0V
#84
1#
b100 /
b011 S
b100 T
1V
#85
0V
#86
0#
1$
0%
b100 .
b000 /
b00000000000000000000000000100000 P
b100 S
b000 T
1V
b11001010111111101011101010111110 \
b00000000000000000000000000000000 ]
#87
0V
#88
0$
0&
b000 .
b011 /
b000 S
1V
b00000000000000000000000000000000 \
#89
0V
#90
1%
1&
0,
b011 .
b011 T
1V
0X
b00000000000000000000000000100000 ]
#91
0V
#92
1#
b100 /
b011 S
b100 T
1V
#93
0V
#94
0#
1$
0%
b100 .
b000 /
b100 S
b000 T
1V
b11001010111111101011101010111110 \
b00000000000000000000000000000000 ]
#95
0V
#96
0$
0&
b000 .
b000 S
1V
b00000000000000000000000000000000 \
#97
0V
#98
1V
#99
0V
#100
1-
b001 /
1V
1Y
b00000000000000000000000000110000 Z
b10111110111011111100101011111110 [
#101
0V
#102
1)
1*
b1111 +
b001 .
b001 T
1V
b00000000000000000000000000110000 ^
b10111110111011111100101011111110 _
#103
0V
#104
1'
b010 /
1Q
1R
b001 S
b010 T
1V
#105
0V
#106
0'
1(
0)
b0000 +
b010 .
b000 /
b10111110111011111100101011111110 @
0Q
0R
b010 S
b000 T
1V
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
#107
0V
#108
0(
0*
b000 .
b001 /
b000 S
1V
#109
0V
#110
1)
1*
b1111 +
0-
b001 .
b001 T
1V
0Y
b00000000000000000000000000110000 ^
b10111110111011111100101011111110 _
#111
0V
#112
1'
b010 /
1Q
1R
b001 S
b010 T
1V
#113
0V
#114
0'
1(
0)
b0000 +
b010 .
b000 /
0Q
0R
b010 S
b000 T
1V
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
#115
0V
#116
0(
0*
b000 .
b000 S
1V
#117
0V
#118
1V
#119
0V
#120
1,
b011 /
1V
1X
#121
0V
#122
1%
1&
b011 .
b011 T
1V
b00000000000000000000000000110000 ]
#123
0V
#124
1#
b100 /
b011 S
b100 T
1V
#125
0V
#126
0#
1$
0%
b100 .
b000 /
b00000000000000000000000000110000 P
b100 S
b000 T
1V
b10111110111011111100101011111110 \
b00000000000000000000000000000000 ]
#127
0V
#128
0$
0&
b000 .
b011 /
b000 S
1V
b00000000000000000000000000000000 \
#129
0V
#130
1%
1&
0,
b011 .
b011 T
1V
0X
b00000000000000000000000000110000 ]
#131
0V
#132
1#
b100 /
b011 S
b100 T
1V
#133
0V
#134
0#
1$
0%
b100 .
b000 /
b100 S
b000 T
1V
b10111110111011111100101011111110 \
b00000000000000000000000000000000 ]
#135
0V
#136
0$
0&
b000 .
b000 S
1V
b00000000000000000000000000000000 \
#137
0V
#138
1V
#139
0V
#140
1V
#141
0V
#142
1V
#143
0V
#144
1V
#145
0V
#146
1V
#147
0V
#148
1V
#149
0V
#150
1V
